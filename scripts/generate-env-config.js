const fs = require('fs');
const path = require('path');

const rootDir = process.cwd();
const envPath = path.join(rootDir, '.env');
const outputPath = path.join(rootDir, 'env-config.js');

const defaultConfig = {
    apiEndpoint: '',
    apiKey: '',
    model: 'gpt-3.5-turbo',
    temperature: 0.7,
    maxTokens: 150,
};

const parseEnvFile = (contents) => {
    const result = {};

    contents.split(/\r?\n/).forEach((line) => {
        const trimmed = line.trim();

        if (!trimmed || trimmed.startsWith('#')) {
            return;
        }

        const equalsIndex = trimmed.indexOf('=');
        if (equalsIndex === -1) {
            return;
        }

        const key = trimmed.slice(0, equalsIndex).trim();
        let value = trimmed.slice(equalsIndex + 1).trim();

        if (!key) {
            return;
        }

        if ((value.startsWith('"') && value.endsWith('"')) || (value.startsWith("'") && value.endsWith("'"))) {
            value = value.slice(1, -1);
        }

        result[key] = value;
    });

    return result;
};

let parsedEnv = {};

if (fs.existsSync(envPath)) {
    try {
        const envContents = fs.readFileSync(envPath, 'utf8');
        parsedEnv = parseEnvFile(envContents);
    } catch (error) {
        console.warn('[generate-env-config] Failed to read .env file:', error.message);
    }
}

const toNumber = (value, fallback) => {
    if (typeof value === 'undefined' || value === null || value === '') {
        return fallback;
    }

    const num = Number(value);
    return Number.isFinite(num) ? num : fallback;
};

const aiConfig = {
    apiEndpoint: parsedEnv.AI_API_ENDPOINT || defaultConfig.apiEndpoint,
    apiKey: parsedEnv.AI_API_KEY || defaultConfig.apiKey,
    model: parsedEnv.AI_MODEL || defaultConfig.model,
    temperature: toNumber(parsedEnv.AI_TEMPERATURE, defaultConfig.temperature),
    maxTokens: Math.round(toNumber(parsedEnv.AI_MAX_TOKENS, defaultConfig.maxTokens)),
};
aiConfig.enabled = Boolean(aiConfig.apiEndpoint && aiConfig.apiKey);

const fileContent = `// This file is automatically generated. Do not edit directly.\n` +
    `window.__AI_CONFIG__ = ${JSON.stringify(aiConfig, null, 4)};\n`;

try {
    fs.writeFileSync(outputPath, fileContent, 'utf8');
    console.log('[generate-env-config] Wrote AI configuration to env-config.js');
} catch (error) {
    console.error('[generate-env-config] Failed to write env-config.js:', error.message);
    process.exitCode = 1;
}
